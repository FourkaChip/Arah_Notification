name: CI - FastAPI Docker Build & Push and Update Manifest

on:
  push:
    branches:
      - dev

env:
  REPO: fourka
  IMAGE_NAME: fourka-noti
  IMAGE_TAG: ${{ github.ref_name }}-${{ github.run_number }}
  MANIFEST_PATH: k8s/notification.yaml

jobs:
  build-push-update:
    runs-on: ubuntu-latest

    steps:
      # 1. Personal Access Token(PAT)을 사용하여 소스코드를 체크아웃합니다.
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      # REPO 소문자 버전 만들기
      - name: Set lowercase REPO
        run: echo "REPO_LC=${REPO,,}" >> $GITHUB_ENV
        env:
          REPO: ${{ env.REPO }}

      - name: Log in to Kakao Container Registry
        run: echo "${{ secrets.KCR_PASSWORD }}" | docker login ${{ secrets.KCR_PROJECT }}.${{ secrets.KCR_REGION }}.kcr.dev -u ${{ secrets.KCR_USERNAME }} --password-stdin

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.KCR_PROJECT }}.${{ secrets.KCR_REGION }}.kcr.dev/${{ env.REPO_LC }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.KCR_PROJECT }}.${{ secrets.KCR_REGION }}.kcr.dev/${{ env.REPO_LC }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      # --- Jenkins 트리거 대신 아래 단계들로 교체되었습니다 ---
      - name: Update image tag in manifest
        run: |
          # 2. 현재 작업 공간에 있는 매니페스트 파일의 이미지 태그를 수정합니다.
          sed -i 's|image: .*|image: ${{ secrets.KCR_PROJECT }}.${{ secrets.KCR_REGION }}.kcr.dev/${{ env.REPO_LC }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}|g' ${{ env.MANIFEST_PATH }}

      - name: Commit and push manifest changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ${{ env.MANIFEST_PATH }}
          # 3. 커밋 메시지에 [skip ci]를 추가하여 무한 루프를 방지합니다.
          git commit -m "Update image for ${{ env.IMAGE_NAME }} to ${{ env.IMAGE_TAG }} [skip ci]"
          # 4. 푸시하기 전에 원격 저장소의 최신 변경사항을 먼저 받아옵니다.
          git pull --rebase
          git push
